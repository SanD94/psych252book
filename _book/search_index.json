[
["simulating-data.html", "Chapter 4 Simulating Data 4.1 Sampling 4.2 Permutation test 4.3 Bootstrap", " Chapter 4 Simulating Data use ideas from data camp course illustrate ideas related to correlation: https://crumplab.github.io/statistics/Correlation.html#if-something-caused-something-else-to-change-what-would-that-look-like how gifs were produced: https://crumplab.github.io/statistics/gifs.html#correlation-gifs theme_set( theme_classic()+ theme(text = element_text(size = 20)) ) 4.1 Sampling sampling functions in R sample() sampling from distributions sampling from data frames sample_n() sample_frac() 4.2 Permutation test set.seed(0) df.data = data_frame( a = rnorm(20, mean = 5, sd = 2), b = rnorm(20, mean = 3, sd = 2) ) %&gt;% gather(&#39;condition&#39;,&#39;rating&#39;) df.data %&gt;% group_by(condition) %&gt;% summarize(rating.mean = mean(rating), rating.sd = sd(rating)) %&gt;% kable() condition rating.mean rating.sd a 4.996443 2.042983 b 3.223299 1.434074 ggplot(data = df.data, aes(x = condition, y = rating))+ stat_summary(fun.y = mean, geom = &#39;bar&#39;, color = &#39;black&#39;)+ stat_summary(fun.data = mean_cl_boot, geom = &#39;linerange&#39;, size = 1)+ geom_point(position = position_jitter(height = 0, width = 0.1)) The difference in the mean rating between condition a and b is 1.7731439. Is the difference significant / meaningful? What were the chances of this difference arising due to chance? set.seed(0) df.permutation = df.data %&gt;% mutate(permutation = sample(condition)) #randomly assign labels df.permutation %&gt;% group_by(permutation) %&gt;% summarize(rating.mean = mean(rating), rating.sd = sd(rating)) %&gt;% kable() permutation rating.mean rating.sd a 4.009136 2.107449 b 4.210605 1.849973 ggplot(data = df.permutation, aes(x = permutation, y = rating))+ stat_summary(fun.y = mean, geom = &#39;bar&#39;, color = &#39;black&#39;)+ stat_summary(fun.data = mean_cl_boot, geom = &#39;linerange&#39;, size = 1)+ geom_point(aes(color = condition), position = position_jitter(height = 0, width = 0.1)) Now, letâ€™s do this many times. # df.permutations = permute(data = df.data, n = 10) # # # df.permutations %&gt;% # map_df(.$perm, ~ group_by(condition) %&gt;% summarize(mean(rating))) # # # tmp = df.permutations$perm[1][[1]] # # df.permutations$perm[1][[1]]$data %&gt;% # group_by(condition) %&gt;% # summarize(mean(rating)) perms &lt;- permute(mtcars, 1000, mpg) models &lt;- map(perms$perm, ~ lm(mpg ~ wt, data = .)) glanced &lt;- map_df(models, broom::glance, .id = &quot;id&quot;) # distribution of null permutation statistics hist(glanced$statistic) # confirm these are roughly uniform p-values hist(glanced$p.value) # test against the unpermuted model to get a permutation p-value mod &lt;- lm(mpg ~ wt, mtcars) mean(glanced$statistic &gt; broom::glance(mod)$statistic) #&gt; [1] 0 4.3 Bootstrap "]
]
